sources:
  my-pg-source:
    kind: postgres
    host: 127.0.0.1
    port: 5432
    database: toolbox_db
    user: toolbox_user
    password: my-password
tools:
  search-hotels-by-name:
    kind: postgres-sql
    source: my-pg-source
    description: Search for hotels based on name.
    parameters:
      - name: name
        type: string
        description: The name of the hotel.
    statement: SELECT * FROM hotels WHERE name ILIKE '%' || $1 || '%';
  search-hotels-by-location:
    kind: postgres-sql
    source: my-pg-source
    description: Search for hotels based on location.
    parameters:
      - name: location
        type: string
        description: The location of the hotel.
    statement: SELECT * FROM hotels WHERE location ILIKE '%' || $1 || '%';
  book-hotel:
    kind: postgres-sql
    source: my-pg-source
    description: >-
       Book a hotel by its ID. If the hotel is successfully booked, returns a NULL, raises an error if not.
    parameters:
      - name: hotel_id
        type: string
        description: The ID of the hotel to book.
    statement: UPDATE hotels SET booked = B'1' WHERE id = $1;
  update-hotel:
    kind: postgres-sql
    source: my-pg-source
    description: >-
      Update a hotel's check-in and check-out dates by its ID. Returns a message
      indicating  whether the hotel was successfully updated or not.
    parameters:
      - name: hotel_id
        type: string
        description: The ID of the hotel to update.
      - name: checkin_date
        type: string
        description: The new check-in date of the hotel.
      - name: checkout_date
        type: string
        description: The new check-out date of the hotel.
    statement: >-
      UPDATE hotels SET checkin_date = CAST($2 as date), checkout_date = CAST($3
      as date) WHERE id = $1;
  cancel-hotel:
    kind: postgres-sql
    source: my-pg-source
    description: Cancel a hotel by its ID.
    parameters:
      - name: hotel_id
        type: string
        description: The ID of the hotel to cancel.
    statement: UPDATE hotels SET booked = B'0' WHERE id = $1;
  list-invoices:
    kind: postgres-sql
    source: my-pg-source
    description: List all invoices or filter by hotel_id.
    parameters:
      - name: hotel_id
        type: string
        description: Optional. The ID of the hotel to filter invoices by. Pass an empty string to list all invoices.
    statement: >-
      SELECT * FROM invoices
      WHERE ($1 = '' OR hotel_id = $1)
      ORDER BY invoice_date DESC;
  create-invoice:
    kind: postgres-sql
    source: my-pg-source
    description: Create a new invoice.
    parameters:
      - name: hotel_id
        type: string
        description: The ID of the hotel this invoice is for.
      - name: guest_name
        type: string
        description: The name of the guest.
      - name: amount
        type: string
        description: The amount of the invoice.
    statement: >-
      INSERT INTO invoices (hotel_id, guest_name, amount) 
      VALUES ($1, $2, CAST($3 AS DECIMAL(10,2))) 
      RETURNING id;

  update-invoice-status:
    kind: postgres-sql
    source: my-pg-source
    description: Mark an invoice as paid or unpaid.
    parameters:
      - name: invoice_id
        type: string
        description: The ID of the invoice to update.
      - name: paid
        type: string
        description: Set to true to mark as paid, false to mark as unpaid.
    statement: >-
      UPDATE invoices SET paid = CAST($2 AS BOOLEAN) 
      WHERE id = CAST($1 AS INTEGER);

toolsets:
  my-toolset:
    - search-hotels-by-name
    - search-hotels-by-location
    - book-hotel
    - update-hotel
    - cancel-hotel
    - list-invoices
    - create-invoice
    - update-invoice-status
